version: 2

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/php:7.4-node-browsers # ...with this image as the primary container; this is where all `steps` will run
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DB: symfony
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_PASSWORD:
      - image: mysql:5.7
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: ~/symfony # directory where steps will run
    steps: # a set of executable commands
      - checkout # special step to check out source code to working directory
      - run: sudo apt update
      - run: sudo apt install -y libsqlite3-dev zlib1g-dev mariadb-client zlib1g-dev
      - run: sudo docker-php-ext-install zip pdo_mysql
      - run: sudo docker-php-ext-enable zip pdo_mysql
      - run: sudo composer self-update
      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v1-
      - run: composer install -n --prefer-dist --no-scripts
      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - restore_cache: # special step to restore the dependency cache if `package.json` does not change
          keys:
            - node-v1-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - node-v1-
      - run: cp .env .env.local
      - run: yarn install
      - save_cache: # special step to save the dependency cache with the `package.json` cache key template
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: yarn run encore production
      - run: php bin/console security:check
      - run: curl -L https://cs.symfony.com/download/php-cs-fixer-v2.phar -o php-cs-fixer
      - run: chmod a+x php-cs-fixer
      - run: ./php-cs-fixer --diff --dry-run -v --allow-risky=yes fix
      - run: php -d memory_limit=-1 vendor/bin/phpstan analyse src --level max
      - run: php -d memory_limit=-1 vendor/bin/simple-phpunit

  deploy:
    docker:
      - image: circleci/php:7.4-browsers
    working_directory: ~/symfony
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "5c:d4:86:b8:f4:fa:fd:05:b6:1a:8d:21:15:69:79:f9"
      - run:
          name: Install Deployer
          command: |
            curl -LO https://deployer.org/deployer.phar
            sudo mv deployer.phar /usr/local/bin/dep
            sudo chmod +x /usr/local/bin/dep
      - run:
          name: Deploy
          command: |
            echo '|1|o6ixDeDYnH2RtzN6cRMAdmtIy+8=|xtbEa6oj4yN81uF+f5gbKJqcmc8= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIA1ggVkrJj1FHALz8de+DHxEuPBmDAq38QHZA8pe4FQ5' >> ~/.ssh/known_hosts
            echo '|1|Bn6fOv+RZgYmpk+if4vAlUrvnCs=|4lSJFolux/OvPEjFzKyVZq0fDRs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCbmrvTs5eGylvG/kSESlzmI8QTeT1b/FssMVrAAeD/9oc9caVR+2YXGzCjGvGRo1mYKVe7fpbt5E8inN3MVnAM7kD7iVmGb4mX4KG2m29YOSlstYoGdAFGHtb+oDZb7nJTNns5FiYk85DhfiQzWdPMHEi2LrOVY7QBqeDDPhJC2buP3NII0v+TxLY+PT++oOeXidRfI1RFHF45mKAturqEA4d1OTmt46ab+Op0HVXq7ivnCx75GJyVWGRuxqen1N4emn6juyFdyyShgSMs4O/nqSPp2HZeEpvLzdCSTuY5Rgq/zsXo1FwKhTUYMK5loiC+JVb/pyr/6ypl02i1A/x9' >> ~/.ssh/known_hosts
            echo '|1|1NWpzyQ4bNXUuXbU7RLpbEEudI0=|7l+7Xg2NnENvLJQRsrDclS+CSCM= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNFqdYqP/d6P14hiq7q4GZTSXENV5D9jfVqSf5vqSZ8EP3/8wzRIieCa8W05RdYwl1AaFXLRCd93itO1r2A9adY=' >> ~/.ssh/known_hosts
            dep deploy

workflows:
  version: 2
  notify_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: develop
